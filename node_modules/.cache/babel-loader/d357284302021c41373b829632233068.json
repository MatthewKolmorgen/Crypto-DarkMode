{"ast":null,"code":"var _jsxFileName = \"/Users/matthewkolmorgen/Projects/Crypto-DarkMode/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Charts from './components/Charts';\nimport Navbar from './components/Navbar';\nimport { useDarkMode } from './components/hooks/useDarkMode.js';\nimport './styles.scss';\n\nconst App = () => {\n  const [coinData, setCoinData] = useState([]);\n  const [darkMode, setDarkMode] = useDarkMode(false);\n  useEffect(() => {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=true').then(res => setCoinData(res.data)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: darkMode ? 'dark-mode App' : 'App',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    darkMode: darkMode,\n    setDarkMode: setDarkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Charts, {\n    coinData: coinData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/Users/matthewkolmorgen/Projects/Crypto-DarkMode/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","Charts","Navbar","useDarkMode","App","coinData","setCoinData","darkMode","setDarkMode","get","then","res","data","catch","err","console","log","rootElement","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,SAASC,WAAT,QAA4B,mCAA5B;AAEA,OAAO,eAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BL,WAAW,CAAC,KAAD,CAA3C;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFS,GADH,CAEI,wHAFJ,EAIGC,IAJH,CAISC,GAAD,IAASL,WAAW,CAACK,GAAG,CAACC,IAAL,CAJ5B,EAKGC,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD,GAPQ,EAON,EAPM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEP,QAAQ,GAAG,eAAH,GAAqB,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEA,QAAlB;AAA4B,IAAA,WAAW,EAAEC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEH,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAlBD;;AAoBA,MAAMY,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACApB,QAAQ,CAACqB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBH,WAAzB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport axios from 'axios' \n\nimport Charts from './components/Charts'\nimport Navbar from './components/Navbar'\n\nimport { useDarkMode } from './components/hooks/useDarkMode.js'\n\nimport './styles.scss'\n\nconst App = () => {\n  const [coinData, setCoinData] = useState([])\n  const [darkMode, setDarkMode] = useDarkMode(false)\n\n  useEffect(() => {\n    axios\n      .get(\n        'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=true'\n      )\n      .then((res) => setCoinData(res.data))\n      .catch((err) => console.log(err))\n  }, [])\n  return (\n    <div className={darkMode ? 'dark-mode App' : 'App'}>\n      <Navbar darkMode={darkMode} setDarkMode={setDarkMode} />\n      <Charts coinData={coinData} />\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)"]},"metadata":{},"sourceType":"module"}